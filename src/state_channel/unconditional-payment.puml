@startuml
actor Alice as A

box "Blockchain" #lightblue
    participant "Channel Registry" as reg
    participant "WETH token" as weth
end box

actor Bob as B

note over weth: **Balances**:\n  50 — Alice\n  80 — Bob\n  0 — Ch. Reg.
note over reg: channel count: 0

group Open channel
    A -> reg: Open channel
    note over reg: **chID:** 0\n**Alice**\n  0 Deposit\n  0 Credit\n  0 Withdrawal\n**Bob**\n  0 Deposit\n  0 Credit\n  0 Withdrawal
    reg -> reg: LogChannel(\n  ID: 0,\n  left: Alice,\n  right: Bob)
    note over reg: channel count: 1
    reg --> A: Channel ID: 0
    reg --> B: Channel ID: 0
end

group Deposit
    note over A: **Alice**\n  10 Deposit
    A -> reg: Deposit 10 WETH
    note over reg: **Alice**\n  10 Deposit
    reg -> weth: transferFrom(\n  Alice, itself, 10 WETH)
    note over weth: **Balances**:\n  40 — Alice\n  80 — Bob\n  10 — Ch. Reg.
    reg --> B: Deposit(Alice, chID: 0, 10)
    note over B: **Alice**\n  10 Deposit
end

group Transfer
    note over A: **Alice**\n  10 Deposit\n -7 Credit\n**Bob**\n  7 Credit
    A -> B: send(7, over chID 1)
    note over B: **Alice**\n  10 Deposit\n -7 Credit\n**Bob**\n  7 Credit
end

group Cooperative Settle by Alice
    note right A: Balance = Deposit + Credit - Withdraw
    note over A: **Alice**\n  -7 Credit\n  3 Withdrawal\n**Bob**\n  7 Credit\n  7 Withdrawal
    A -> B: send signed channel state
    B -> reg: update(channel)
    note over reg: **Alice**\n  10 Deposit\n  -7 Credit\n  3 Withdrawal\n**Bob**\n  0 Deposit\n  7 Credit\n  7 Withdrawal

    A -> reg: Withdraw
    reg -> weth: transfer 3 WETH to Alice
    note over weth: **Balances**:\n  43 — Alice\n  80 — Bob\n  7 — Ch. Reg.

    B -> reg: Withdraw
    reg -> weth: transfer 7 WETH to Bob
    note over weth: **Balances**:\n  43 — Alice\n  87 — Bob\n  0 — Ch. Reg.
end

@enduml
